Binary addition
twos complements
bias notation
binary coded decimal(BCD)
more binary stuff

binary division
  - skipping
  - more complicated then multiplication

binary multiplication
  - 3rd verion from the book
  - multiply to n bit numbers
    - 2n bit result
    - multiply 32 bit number needs 64 bits
    - $hi register for highest 32 bits
    - $lo register for lowest 32 bits
  Normal multiplication
      multiplicand
    x multiplier
      product
  binary multiplication
    |multiplicand|
    |  product   | multiplier |
  multiplicand in one register
  product/multiplier in another register
  product side starts as all zeros
  as you multiply the product side of the product/multiplier register will expand into the multiplier side
    |multiplicand|
    |         product         |
  Steps
    Repeat n times where n is the number of bits in the multiplier/multiplicand
    - examine least sig bit of product/multiplier register
      - if 1 add multiplicand to top half of product/multiplier register
    - shift product/multiplier right by 1

        0011    3
      x 0010    2
       ------
        0000
       0011
      0000
    +0000
     -------
     0000110    6

Circuits(combinatorial)
  Decoder
    n inputs, 2^n outputs
                      |------------| x0
                      |            | x1
    3-8 encoder   a-/-|            | x2
                  3bit|            | ..
                      |------------| x7

                      |------------| x0
                      |            | x1
    2-4 encoder   a-/-|            | x2
                  2bit|            | x3
                      |------------|


addition
a bit adder
  (3,2) adder
  3 input, 2 outputs

ALU - arithemtic logic unit
                    Ci(carry in)
                        |
                  |------------|
              a --|            |
                  |            |-- sum
              b --|            |
                  |------------|
                        |
                    Co(carry out)

  ripple carry adder
    - dont use, too slow

a  b  c | sum  co
-----------------
0  0  0    0   0
0  0  1    1   0
0  1  0    1   0
0  1  1    0   1
1  0  0    1   0
1  0  1    0   1
1  1  0    0   1
1  1  1    1   1


S-R latches
  set and reset latches
  uses nor gates
